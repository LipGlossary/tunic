<?xml version="1.0" standalone="no"?>
<svg viewBox="0 0 400 300" width="100vw" height="100vh" xmlns="http://www.w3.org/2000/svg" xmlns:xlink="http://www.w3.org/1999/xlink" version="1.1">
  <defs>
    <symbol id="base" viewBox="-4 -9 9 23">
      <line class="base"         x1="-4" x2="4"  y1="0"  y2="0" ></line>
    </symbol>
    <symbol id="あ頭" viewBox="-4 -9 9 23">
      <line class="あ 外 左 頭 下" x1="-4" x2="-4" y1="0"  y2="-5"></line>
    </symbol>
    <symbol id="あ足" viewBox="-4 -9 9 23">
      <line class="あ 外 左 足 上" x1="-4" x2="-4" y1="2"  y2="5" ></line>
    </symbol>
    <symbol id="い"  viewBox="-4 -9 9 23">
      <line class="い 外 左 頭 上" x1="-4" x2="0"  y1="-5" y2="-8"></line>
    </symbol>
    <symbol id="う"  viewBox="-4 -9 9 23">
      <line class="う 外 右 頭 上" x1="0"  x2="4"  y1="-8" y2="-5"></line>
    </symbol>
    <symbol id="え"  viewBox="-4 -9 9 23">
      <line class="え 外 左 足 下" x1="-4" x2="0"  y1="5"  y2="8" ></line>
    </symbol>
    <symbol id="お"  viewBox="-4 -9 9 23">
      <line class="お 外 右 足 下" x1="0"  x2="4"  y1="8"  y2="5" ></line>
    </symbol>
    <symbol id="ア"  viewBox="-4 -9 9 23">
      <line class="ア 内 中 頭 両" x1="0"  x2="0"  y1="0"  y2="-8"></line>
    </symbol>
    <symbol id="イ"  viewBox="-4 -9 9 23">
      <line class="イ 内 中 足 両" x1="0"  x2="0"  y1="2"  y2="8" ></line>
    </symbol>
    <symbol id="ウ"  viewBox="-4 -9 9 23">
      <line class="ウ 内 左 頭 下" x1="0"  x2="-4" y1="-2" y2="-5"></line>
    </symbol>
    <symbol id="エ"  viewBox="-4 -9 9 23">
      <line class="エ 内 右 頭 下" x1="0"  x2="4"  y1="-2" y2="-5"></line>
    </symbol>
    <symbol id="オ"  viewBox="-4 -9 9 23">
      <line class="オ 内 左 足 上" x1="0"  x2="-4" y1="2"  y2="5" ></line>
    </symbol>
    <symbol id="カ"  viewBox="-4 -9 9 23">
      <line class="カ 内 右 足 上" x1="0"  x2="4"  y1="2"  y2="5" ></line>
    </symbol>
    <symbol id="ん"  viewBox="-4 -9 9 23">
      <circle class="ん 外 中 足 下" cx="0" cy="9" r="1"></circle>
    </symbol>
    <symbol id="あ">
      <use href="#あ頭" />
      <use href="#あ足" />
    </symbol>
    <symbol id="glyph">
      <rect width="9" height="23" />
      <use href="#base" />
      <use href="#あ" />
      <use href="#い" />
      <use href="#う" />
      <use href="#え" />
      <use href="#お" />
      <use href="#ア" />
      <use href="#イ" />
      <use href="#ウ" />
      <use href="#エ" />
      <use href="#オ" />
      <use href="#カ" />
      <use href="#ん" />
    </symbol>
  <style><![CDATA[
    circle, line {
      fill: none;
      stroke-linecap: round;
      stroke: none;
    }
    .base {
      stroke: darkGray;
    }
    text {
      fill: black;
      font-family: Gentium,'Gentium Plus',GentiumAlt,'DejaVu Sans','Segoe UI','Lucida Grande','Charis SIL','Doulos SIL','TITUS Cyberbit Basic','Code2000','Lucida Sans Unicode',sans-serif;
      font-size: 6px;
      font-weight: bold;
      line-height: 1;
      transition: all 250ms;
    }
    text.phoneme {
      font-size: 2px;
      text-anchor: middle;
    }
    [href="#glyph"]:hover + text.phoneme {
    }
    .word {}
    rect {
      fill: blue;
      opacity: 0.25;
    }
    [href="#glyph"].あ { --stroke-あ: black; }
    [href="#glyph"].い { --stroke-い: black; }
    [href="#glyph"].う { --stroke-う: black; }
    [href="#glyph"].え { --stroke-え: black; }
    [href="#glyph"].お { --stroke-お: black; }
    [href="#glyph"].ア { --stroke-ア: black; }
    [href="#glyph"].イ { --stroke-イ: black; }
    [href="#glyph"].ウ { --stroke-ウ: black; }
    [href="#glyph"].エ { --stroke-エ: black; }
    [href="#glyph"].オ { --stroke-オ: black; }
    [href="#glyph"].カ { --stroke-カ: black; }
    [href="#glyph"].ん {
      --fill-ん: white;
      --stroke-ん: black;
    }
    line.あ { stroke: var(--stroke-あ); }
    line.い { stroke: var(--stroke-い); }
    line.う { stroke: var(--stroke-う); }
    line.え { stroke: var(--stroke-え); }
    line.お { stroke: var(--stroke-お); }
    line.ア { stroke: var(--stroke-ア); }
    line.イ { stroke: var(--stroke-イ); }
    line.ウ { stroke: var(--stroke-ウ); }
    line.エ { stroke: var(--stroke-エ); }
    line.オ { stroke: var(--stroke-オ); }
    line.カ { stroke: var(--stroke-カ); }
    circle.ん {
      fill: var(--fill-ん, none);
      stroke: var(--stroke-ん, none);
    }
  ]]></style>
  </defs>

  <svg class="word" x="5" y="0" width="100%" height="40" viewBox="0 0 10 23" preserveAspectRatio="xMinYMin meet">
    <use href="#glyph" data-outer="15" data-inner="7" x="0" y="0" />
    <use href="#glyph" data-outer="24" data-inner="39" x="8" y="0" />
    <use href="#glyph" data-outer="0" data-inner="39" x="16" y="0" />
    <text x="28" y="50%">uses</text>
  </svg>

  <svg class="word" x="105" y="0" width="100%" height="40" viewBox="0 0 10 23" preserveAspectRatio="xMinYMin meet">
    <use href="#glyph" data-outer="15" data-inner="7" x="0" y="0" />
    <use href="#glyph" data-outer="0" data-inner="39" x="8" y="0" />
    <text x="20" y="50%">use</text>
  </svg>

  <svg class="word" x="205" y="0" width="100%" height="40" viewBox="0 0 10 23" preserveAspectRatio="xMinYMin meet">
    <use href="#glyph" data-outer="15" data-inner="7" x="0" y="0" />
    <text x="12" y="50%">you</text>
  </svg>

  <svg class="word" x="305" y="0" width="100%" height="40" viewBox="0 0 10 23" preserveAspectRatio="xMinYMin meet">
    <use href="#glyph" data-outer="23" data-inner="7" x="0" y="0" />
    <text x="12" y="50%">your</text>
  </svg>

  <script>
const INNER = ["カ", "オ", "エ", "ウ", "イ", "ア"];
const OUTER = ["ん", "お", "え", "う", "い", "あ"];
const DICTIONARY = [
  { o: 0, i: 3, p: `/l/` },
  { o: 0, i: 10, p: `/p/\n/pɹ/\n/pɹɛ/` },
  { o: 0, i: 14, p: `/t/` },
  { o: 0, i: 27, p: `/s/` },
  { o: 0, i: 39, p: `/z/` },
  { o: 0, i: 41, p: `/k/?` },
  { o: 0, i: 42, p: `?` },
  { o: 0, i: 48, p: `?` },
  { o: 0, i: 49, p: `/d/` },
  { o: 0, i: 52, p: `/n/` },
  { o: 3, i: 3, p: `/lɑ/?` },
  { o: 3, i: 14, p: `/lʊ/?` },
  { o: 3, i: 41, p: `?` },
  { o: 4, i: 3, p: `/laɪ/` },
  { o: 4, i: 14, p: `?` },
  { o: 4, i: 33, p: `?` },
  { o: 6, i: 0, p: `/eɪ/\n/ə/"` },
  { o: 6, i: 11, p: `/ɹʌ/?` },
  { o: 6, i: 12, p: `/w/\n/wʌ/` },
  { o: 6, i: 33, p: `/b/\n/bʌ/` },
  { o: 6, i: 41, p: `/k/\n/kə/` },
  { o: 6, i: 51, p: `/ðə/` },
  { o: 6, i: 62, p: `/ʃ/\n/ʃə/` },
  { o: 7, i: 0, p: `/oʊ/` },
  { o: 7, i: 11, p: `?` },
  { o: 7, i: 41, p: `/kæ/` },
  { o: 9, i: 6, p: `?` },
  { o: 9, i: 49, p: `/də/` },
  { o: 15, i: 7, p: `/juː/` },
  { o: 15, i: 14, p: `/tu/` },
  { o: 16, i: 12, p: `?` },
  { o: 16, i: 26, p: `/faʊ/?` },
  { o: 16, i: 27, p: `/saʊ/\n/saʊθ/` },
  { o: 19, i: 35, p: `/ðə/?` },
  { o: 23, i: 0, p: `/ɔɹ/\n/ɚ/` },
  { o: 23, i: 7, p: `/jɔɹ/\n/jʊɚ/\n/jɝ/` },
  { o: 23, i: 26, p: `?` },
  { o: 23, i: 52, p: `/no/?\n/noɹ/?\n/nơ/?` },
  { o: 24, i: 12, p: `/wɪ/?` },
  { o: 24, i: 14, p: `/ʌt/\n/t/\n/ʌʔ/\n/ʔ/` },
  { o: 24, i: 39, p: `/zɪ/` },
  { o: 25, i: 11, p: `/ɛ/\n/ɹɛ/` },
  { o: 25, i: 12, p: `/wɛ/` },
  { o: 25, i: 33, p: `/bɛ/` },
  { o: 27, i: 41, p: `/ki/` },
  { o: 27, i: 51, p: `/ði/?` },
  { o: 27, i: 63, p: `/ʃiː/` },
  { o: 30, i: 41, p: `/kɑɹ/\n/kᶐ/` },
  { o: 30, i: 42, p: `/ɡɑɹ/\n/ɡᶐ/` },
  { o: 31, i: 0, p: `/oʊ/?` },
  { o: 31, i: 10, p: `/poʊ/` },
  { o: 31, i: 11, p: `/ɹoʊ/` },
  { o: 31, i: 35, p: `/hoʊ/` },
  { o: 31, i: 52, p: `/noʊ/?` },
  { o: 38, i: 37, p: `?` },
  { o: 56, i: 52, p: `/ʌv/` },
  { o: 57, i: 17, p: `?` },
  { o: 59, i: 27, p: `/iː/\n/iːs/\n/iːst/` },
];

document.querySelectorAll('[href="#glyph"]').forEach((glyph) => {
  const {
    dataset: { inner, outer },
  } = glyph;
  [
    [inner, INNER],
    [outer, OUTER],
  ].forEach(([n, mask]) => {
    [...parseInt(n).toString(2).padStart(6, "0")].forEach((bit, i) => {
      glyph.classList[parseInt(bit) ? "add" : "remove"](mask[i]);
    });
  });
  const phoneme =
    DICTIONARY.filter(({ o }) => o === parseInt(outer)).filter(
      ({ i }) => i === parseInt(inner)
    )[0]?.p ?? "";
  const text = document.createElementNS("http://www.w3.org/2000/svg", "text");
  text.classList.add("phoneme");
  const x = parseInt(glyph.getAttribute("x") ?? "0") + 4.5;
  const y = parseInt(glyph.getAttribute("y") ?? "0") + 22;
  text.append(
    ...phoneme.split("\n").map((p, i) => {
      const t = document.createElementNS("http://www.w3.org/2000/svg", "tspan");
      t.setAttribute("x", x);
      t.setAttribute("y", i * 2.2 + y);
      t.innerHTML = p;
      return t;
    })
  );
  glyph.after(text);
});
  </script>
</svg>
